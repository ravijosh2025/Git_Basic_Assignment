 Q2.How to set multiple remote repositories for the same project? Explain the use case. you should have a working demo of it.

Setting Multiple Remote Repositories for the Same Project
In Git, you can configure multiple remote repositories for a single project. This is useful in scenarios such as:
- Collaborating with different teams who use separate repositories.
- Pushing to both a personal and a company repository.
- Keeping a backup of your repository in another location.

Use Case
Consider a scenario where you are working on an open-source project that is hosted on GitHub, but you also want to maintain a backup on GitLab. You can set up multiple remotes to push changes to both platforms.

Steps to Set Multiple Remote Repositories
1.Clone or Initialize Your Repository:
   - If you don't already have a repository, create one:
     git init my-project
     cd my-project
2.Add the First Remote:
   - Add the main remote (e.g.GitHub).
     git remote add origin https://github.com/username/repo.git

3.Add the Second Remote:
   - Add an additional remote (e.g.GitLab) with a different name.
     git remote add backup https://gitlab.com/username/repo.git
4.Verify the Remotes:
   - Check that both remotes have been added.
     git remote -v
   - The output will list both `origin` and `backup` remotes:
     origin  https://github.com/username/repo.git (fetch)
     origin  https://github.com/username/repo.git (push)
     backup  https://gitlab.com/username/repo.git (fetch)
     backup  https://gitlab.com/username/repo.git (push)
5.Push to Both Remotes:
   - Push changes to the `origin` remote (GitHub):
     git push origin main
   - Push changes to the `backup` remote (GitLab):
     git push backup main

6.Working with Multiple Remotes:
   - You can fetch from any remote:
     git fetch backup
   - Pull from a specific remote:
     git pull origin main
   - Push changes to all remotes simultaneously using a loop or by configuring a default behavior (though this requires scripting and isn't native to Git).

Conclusion
Setting multiple remotes allows you to manage and collaborate across different platforms efficiently. It's a powerful feature for those who need to maintain codebases in multiple locations or repositories.